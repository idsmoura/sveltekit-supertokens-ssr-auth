version: "3.9"
services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    networks:
      - awesome-project
    command:
      - "--api=true"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=web"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=cleophas@moura.com"
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    volumes:
      - "~/letsencrypt/awesome-project:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8000"
      - "traefik.http.routers.traefik.rule=Host(`traefik.hyperdrive.mediabus.io`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
  # postgres:
  #   image: postgres:15
  #   ports:
  #     - "5432:5432"
  #   restart: always
  #   env_file:
  #     - ./backend/.env
  #   volumes:
  #     - awesome-project-db:/var/lib/postgresql/data
  #   networks:
  #     - awesome-project
  # supertokens:
  #   image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
  #   depends_on:
  #     - traefik
  #     - postgres
  #   ports:
  #     - 3567:3567
  #   env_file:
  #     - ./backend/.env
  #   networks:
  #     - awesome-project
  #   restart: unless-stopped
  #   healthcheck:
  #     test: >
  #       bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  # backend:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./backend
  #   ports:
  #     - "8080:8080"
  #   restart: always
  #   env_file:
  #     - ./backend/.env
  #   networks:
  #     - awesome-project
  #   depends_on:
  #     - traefik
  #     - supertokens
  #     - postgres
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.backend.loadbalancer.server.port=3000"
  #     - "traefik.http.routers.backend.entrypoints=web"
  #     - "traefik.http.routers.backend.rule=Host(`api.hyperdrive.mediabus.io`)"
  #     - "traefik.http.routers.backend.middlewares=backend-https"
  #     - "traefik.http.middlewares.backend-https.redirectscheme.scheme=https"
  #     - "traefik.http.routers.backend-secure.entrypoints=websecure"
  #     - "traefik.http.routers.backend-secure.rule=Host(`api.hyperdrive.mediabus.io`)"
  #     - "traefik.http.routers.backend-secure.tls=true"
  #     - "traefik.http.routers.backend-secure.tls.certresolver=myresolver"
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    ports:
      - "3000:3000"
    restart: always
    env_file:
      - ./frontend/.env.dev
    # volumes:
    #   - ./:/usr/src/app
    #   - /usr/src/app/node_modules
    # command: npm run dev
    networks:
      - awesome-project
    depends_on:
      - traefik
      # - supertokens
      # - postgres
      # - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.rule=Host($$VITE_APP_BASE_URL)"
      - "traefik.http.routers.frontend.middlewares=frontend-https"
      - "traefik.http.middlewares.frontend-https.redirectscheme.scheme=https"
      - "traefik.http.routers.frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-secure.rule=Host($$VITE_APP_BASE_URL)"
      - "traefik.http.routers.frontend-secure.tls=true"
      - "traefik.http.routers.frontend-secure.tls.certresolver=myresolver"

volumes:
  awesome-project-db:

networks:
  awesome-project:
